name: Main

on:
    workflow_dispatch:
    schedule:
        -   cron: '30 5 * * *'
    push:
        branches: [ "main" ]

concurrency:
    group: ${{ github.ref }}
    cancel-in-progress: true

jobs:
    lint:
        if: ${{ false }}  # disabled for now, hasn't run in a while resulting in countless issues
        runs-on: ubuntu-22.04
        steps:
            -   uses: actions/checkout@v4
            -   name: Set up Python
                uses: actions/setup-python@v5
                with:
                    python-version: "3.10"
            -   name: Install tox
                run: |
                    python -m pip install --upgrade pip
                    pip install tox tox-gh-actions
            -   name: Run lint checks
                run: tox run -e flake8

    testml:
        runs-on: ubuntu-22.04
        strategy:
            fail-fast: true
            matrix:
                python-version: [ "3.10", "3.11", "3.12" ]
        steps:
            -   name: Check disk space
                run: df . -h
            -   uses: actions/checkout@v4
            -   name: Set up Python ${{ matrix.python-version }}
                uses: actions/setup-python@v5
                with:
                    python-version: ${{ matrix.python-version }}
            -   name: Download episodes
                run: |
                    wget "https://github.com/flatland-association/flatland-scenarios/raw/refs/heads/main/trajectories/FLATLAND_BENCHMARK_EPISODES_FOLDER.zip" -O FLATLAND_BENCHMARK_EPISODES_FOLDER.zip
                    mkdir -p episodes
                    unzip FLATLAND_BENCHMARK_EPISODES_FOLDER -d episodes
            -   name: Install tox
                run: |
                    python -m pip install --upgrade pip
                    pip install tox tox-gh-actions
            -   name: Run tests
                run: tox
            -   name: Check disk space
                run: df . -h

    test:
        runs-on: ubuntu-22.04
        strategy:
            fail-fast: false
            matrix:
                python-version: [ "3.10", "3.11", "3.12" ]
        steps:
            -   name: Check disk space
                run: df . -h
            -   uses: actions/checkout@v4
            -   name: Set up Python ${{ matrix.python-version }}
                uses: actions/setup-python@v5
                with:
                    python-version: ${{ matrix.python-version }}
            -   name: Download episodes
                run: |
                    wget "https://github.com/flatland-association/flatland-scenarios/raw/refs/heads/main/trajectories/FLATLAND_BENCHMARK_EPISODES_FOLDER.zip" -O FLATLAND_BENCHMARK_EPISODES_FOLDER.zip
                    mkdir -p episodes
                    unzip FLATLAND_BENCHMARK_EPISODES_FOLDER -d episodes
            -   name: Install tox
                run: |
                    python -m pip install --upgrade pip
                    pip install tox tox-gh-actions
            -   name: Run tests
                run: tox -e py${{ matrix.python-version }}
            -   name: Check disk space
                run: df . -h

    notebooks:
        runs-on: ubuntu-22.04
        strategy:
            fail-fast: false
            matrix:
                python-version: [ "3.10", "3.11", "3.12" ]
        steps:
            -   uses: actions/checkout@v4
            -   name: Set up Python ${{ matrix.python-version }}
                uses: actions/setup-python@v5
                with:
                    python-version: ${{ matrix.python-version }}
            -   name: Start Redis
                uses: supercharge/redis-github-action@1.7.0
                with:
                    redis-version: 7.4.2
                    redis-port: 6379
            -   name: Install tox
                run: |
                    python -m pip install --upgrade pip
                    pip install tox tox-gh-actions
            -   name: Run notebooks
                run: tox run -e notebooks

    examples:
        runs-on: ubuntu-22.04
        strategy:
            fail-fast: false
            matrix:
                python-version: [ "3.10", "3.11", "3.12" ]
        steps:
            -   uses: actions/checkout@v4
            -   name: Set up Python ${{ matrix.python-version }}
                uses: actions/setup-python@v5
                with:
                    python-version: ${{ matrix.python-version }}
            -   name: Install tox
                run: |
                    python -m pip install --upgrade pip
                    pip install tox tox-gh-actions
            -   name: Run examples
                run: tox run -e examples

    profiling:
        runs-on: ubuntu-22.04
        steps:
            -   uses: actions/checkout@v4
            -   name: Set up Python
                uses: actions/setup-python@v5
                with:
                    python-version: "3.10"
            -   name: Install tox
                run: |
                    python -m pip install --upgrade pip
                    pip install tox tox-gh-actions
            -   name: Run profiling
                run: tox run -e profiling
            -   uses: actions/upload-artifact@v4
                with:
                    name: upload-profiling-results
                    path: .tox/profiling/log
                    if-no-files-found: error

    publish:
        if: ${{ false }}  # disabled until decided when it should run exactly
        runs-on: ubuntu-22.04
        needs: [ test, examples ]
        steps:
            -   uses: actions/checkout@v4
                with:
                    fetch-depth: 0
            -   name: Set up Python
                uses: actions/setup-python@v5
                with:
                    python-version: "3.10"
            -   name: Install tox
                run: |
                    python -m pip install --upgrade pip
                    pip install tox tox-gh-actions
            -   name: Build new package
                run: tox run -e build
            -   name: Publish distribution to PyPI
                uses: pypa/gh-action-pypi-publish@release/v1
                with:
                    password: ${{ secrets.PYPI_API_TOKEN }}
            -   name: Archive package
                uses: actions/upload-artifact@v4
                with:
                    name: python-package
                    path: dist/
