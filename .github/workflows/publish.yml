name: Publish package to PyPI

on:
    workflow_dispatch:
        inputs:
            version:
                description: "Version number"
                required: true
                type: string
    pull_request:
        branches: [ "main" ]
        types: [ "closed" ]

jobs:
    test:
        if: ${{ github.event_name == 'workflow_dispatch' || (github.event.pull_request.merged == true && startsWith(github.head_ref, 'release/')) }}
        runs-on: ubuntu-22.04
        strategy:
            fail-fast: false
            matrix:
                python-version: [ "3.8", "3.9", "3.10" ]
        steps:
            -   uses: actions/checkout@v3
            -   name: Set up Python ${{ matrix.python-version }}
                uses: actions/setup-python@v3
                with:
                    python-version: ${{ matrix.python-version }}
            -   name: Install tox
                run: |
                    python -m pip install --upgrade pip
                    pip install tox tox-gh-actions
            -   name: Run tests
                run: tox

    publish:
        runs-on: ubuntu-22.04
        needs: [ test ]
        steps:
            -   name: Checkout
                uses: actions/checkout@v3
                with:
                    fetch-depth: 0
            -   name: Set up Python
                uses: actions/setup-python@v3
                with:
                    python-version: "3.8"
            -   name: Install tox
                run: |
                    python -m pip install --upgrade pip
                    pip install tox tox-gh-actions
            -   name: Pick version tag
                id: pick_version
                run: |
                    if [[ $GITHUB_EVENT_NAME == 'workflow_dispatch' ]]; then
                      echo "Workflow triggered manually."
                      VERSION=${{ inputs.version }}
                    elif [[ $GITHUB_EVENT_NAME == 'pull_request' ]]; then
                      echo "Workflow triggered by pull_request close event."
                      VERSION=$(echo $GITHUB_REF | sed 's/release\///')
                    fi
                    echo "::set-output name=version::$VERSION"
            -   name: Add version tag
                run: git tag v${{ steps.pick_version.outputs.version }}
            -   name: Build new package
                run: tox run -e build
            -   name: Publish package to PyPI
                uses: pypa/gh-action-pypi-publish@release/v1
                with:
                    password: ${{ secrets.PYPI_TEST_API_TOKEN }}
                    repository-url: https://test.pypi.org/legacy/
            -   name: Archive package
                uses: actions/upload-artifact@v3
                with:
                    name: python-package
                    path: dist/
