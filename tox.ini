[tox]
env_list = py{37,38}

[gh-actions]
python =
    3.7: py37, flake8
    3.8: py38

[testenv]
set_env =
    PYTHONPATH = {toxinidir}
;HTTP_PROXY and HTTPS_PROXY are required behind corporate proxies
pass_env =
    DISPLAY
    XAUTHORITY
    HTTP_PROXY
    HTTPS_PROXY

[testenv:py{37,38}]
platform = linux|linux2|darwin
deps =
    -r requirements_dev.txt
; run tests from subfolder to ensure that resources are accessed via resources and not via relative paths
change_dir = {envtmpdir}/fefed3ba12bf1ed81dbcc20fb52706ea
commands =
    python -m pytest --basetemp={envtmpdir} {toxinidir}

[testenv:flake8]
base_python = python3.7
deps =
    -r requirements_dev.txt
    -r requirements_continuous_integration.txt
commands =
    flake8 flatland tests examples benchmarks

[testenv:docs]
base_python = python3.7
whitelist_externals = make
deps =
    -r requirements_dev.txt
    -r requirements_continuous_integration.txt
change_dir = {toxinidir}
commands =
    make docs

[testenv:coverage]
base_python = python3.7
whitelist_externals = make
deps =
    -r requirements_dev.txt
    -r requirements_continuous_integration.txt
change_dir = {toxinidir}
commands =
    python make_coverage.py

[testenv:benchmarks]
base_python = python3.7
whitelist_externals = sh
deps =
    -r requirements_dev.txt
    -r requirements_continuous_integration.txt
change_dir = {toxinidir}
commands =
    python {toxinidir}/benchmarks/benchmark_all_examples.py

[testenv:profiling]
base_python = python3.7
deps =
    -r requirements_dev.txt
    -r requirements_continuous_integration.txt
change_dir = {toxinidir}
commands =
    python {toxinidir}/benchmarks/profile_all_examples.py

[testenv:examples]
base_python = python3.7
deps =
    -r requirements_dev.txt
; run tests from subfolder to ensure that resources are accessed via resources and not via relative paths
change_dir = {envtmpdir}/c236d3c240d61a0969d4cb59e2180ce5
commands =
    python {toxinidir}/benchmarks/run_all_examples.py

[testenv:notebooks]
base_python = python3.7
whitelist_externals =
    sh
    bash
    pwd
deps =
    -r requirements_dev.txt
    -r requirements_continuous_integration.txt
; run tests from subfolder to ensure that resources are accessed via resources and not via relative paths
change_dir = {envtmpdir}/6f59bc68108c3895b1828abdd04b9a06
commands =
    bash -c "pwd"
    bash -c "echo $PYTHONPATH"
    python -m jupyter nbextension install --py --sys-prefix widgetsnbextension
    python -m jupyter nbextension enable --py --sys-prefix widgetsnbextension
    python -m jupyter nbextension install --py --sys-prefix jpy_canvas
    python -m jupyter nbextension enable --py --sys-prefix jpy_canvas
    python {toxinidir}/notebooks/run_all_notebooks.py

[testenv:start_jupyter]
base_python = python3.7
whitelist_externals = sh
deps =
    -r requirements_dev.txt
    -r requirements_continuous_integration.txt
change_dir = {toxinidir}
commands =
    python -m jupyter nbextension install --py --sys-prefix widgetsnbextension
    python -m jupyter nbextension enable --py --sys-prefix widgetsnbextension
    python -m jupyter nbextension install --py --sys-prefix jpy_canvas
    python -m jupyter nbextension enable --py --sys-prefix jpy_canvas
    python -m jupyter notebook
