[tox]
env_list = py{38,39,310},notebooks

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310

[testenv]
set_env =
    PYTHONPATH = {toxinidir}
# HTTP_PROXY and HTTPS_PROXY are required behind corporate proxies
pass_env =
    DISPLAY
    XAUTHORITY
    HTTP_PROXY
    HTTPS_PROXY

[testenv:requirements]
base_python = python3.10
skip_install = true
deps =
    pip-tools
commands =
    python -m piptools compile -o requirements.txt pyproject.toml
    python -m piptools compile --extra dev -o requirements-dev.txt pyproject.toml

[testenv:py{38,39,310}]
platform = linux|linux2|darwin
deps =
    -r requirements-dev.txt
commands =
    python -m pytest {posargs}

[testenv:lint]
base_python = python3.10
skip_install = true
deps =
    -r requirements-dev.txt
commands =
    flake8 flatland tests examples benchmarks

[flake8]
exclude = docs
max-line-length = 120
ignore = E121 E126 E123 E128 E133 E226 E241 E242 E704 W291 W293 W391 W503 W504 W505

[testenv:docs]
base_python = python3.10
skip_install = true
deps =
    -r requirements-dev.txt
commands =
    python scripts/make_docs.py

[testenv:coverage]
base_python = python3.10
skip_install = true
deps =
    -r requirements-dev.txt
commands =
    python scripts/make_coverage.py

[testenv:benchmarks]
base_python = python3.10
deps =
    -r requirements-dev.txt
commands =
    python benchmarks/benchmark_all_examples.py

[testenv:profiling]
base_python = python3.10
deps =
    -r requirements-dev.txt
commands =
    python benchmarks/profile_all_examples.py

[testenv:examples]
base_python = python3.10
deps =
    -r requirements-dev.txt
commands =
    python benchmarks/run_all_examples.py

[testenv:notebooks]
base_python = python3.10
allowlist_externals =
    bash
    pwd
deps =
    -r requirements-dev.txt
commands =
    python -m pytest --nbmake  \
        notebooks/simple-graph-plot-2022.ipynb \
        notebooks/Agent-Close-Following.ipynb \
        notebooks/simple_example_manual_control.ipynb \
        notebooks/simple_rendering_demo.ipynb \
        notebooks/flatland_animate.ipynb \
        notebooks/render_episode.ipynb \
        notebooks/scene_editor.ipynb \
        notebooks/test_saved_envs.ipynb 
    # need to enable redis (in a container) in github workflow for this to work
    #    notebooks/test_service.ipynb

[testenv:build]
base_python = python3.10
skip_install = true
deps =
    -r requirements-dev.txt
commands =
    python -m build
